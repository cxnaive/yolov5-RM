Plotting labels...
[34m[1mautoanchor: [39m[22mAnalyzing anchors... anchors/target = 3.28, Best Possible Recall (BPR) = 1.0000
edit: torch.Size([56, 17])
targets!!: 56
t1!!!!!: tensor([[  2.00000,   0.00000,  62.72010,  ..., -80.00000,   1.00000,   0.00000],
        [  7.00000,   2.00000,  35.45400,  ..., -80.00000,   0.00000,   0.00000],
        [  7.00000,   2.00000,  38.43788,  ..., -80.00000,   0.00000,   0.00000],
        ...,
        [ 14.00000,   4.00000,  41.95199,  ..., -80.00000,   1.00000,   2.00000],
        [ 14.00000,   4.00000,  66.12721,  ..., -80.00000,   0.00000,   2.00000],
        [ 15.00000,   3.00000,  79.46535,  ..., -80.00000,   0.00000,   2.00000]], device='cuda:0')
t1!!!!!: tensor([[  0.00000,   4.00000,  28.17696,  ..., -40.00000,   0.00000,   0.00000],
        [  0.00000,   5.00000,  23.04570,  ..., -40.00000,   0.00000,   0.00000],
        [  0.00000,   4.00000,  38.74709,  ..., -40.00000,   0.00000,   0.00000],
        ...,
        [ 11.00000,   3.00000,  17.30560,  ..., -40.00000,   0.00000,   2.00000],
        [ 15.00000,   4.00000,  32.18879,  ..., -40.00000,   0.00000,   2.00000],
        [ 15.00000,   4.00000,  24.57255,  ..., -40.00000,   0.00000,   2.00000]], device='cuda:0')
t1!!!!!: tensor([[  1.00000,   1.00000,   2.79316,   2.81367,   5.58631,   3.39268,   5.58163,   2.33653,   5.42355,   4.50893, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   0.00000],
        [  3.00000,   0.00000,  10.23637,   4.39125,   5.46470,   2.51846,  12.66143,   3.13422,  12.96050,   4.69712,   7.85072,   5.64801,   7.51126,   4.27156, -20.00000, -20.00000,   1.00000,   0.00000],
        [  5.00000,   0.00000,  14.84033,  17.26281,  10.31934,   2.90776,   9.90197,  15.83752,   9.69612,  18.65723, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   0.00000],
        [  6.00000,   2.00000,  10.63403,   9.11789,   4.45208,   2.46954,   8.57043,   7.90401,   8.41394,   9.63754,  12.58486,  10.33232,  12.85394,   8.54699, -20.00000, -20.00000,   1.00000,   0.00000],
        [ 11.00000,   3.00000,   2.36222,  13.51719,   1.76856,   1.73731,   3.24117,  13.08641,   3.01549,  14.38522,   1.48244,  13.74583,   1.68007,  12.64908, -20.00000, -20.00000,   0.00000,   0.00000],
        [  1.00000,   1.00000,   2.79316,   2.81367,   5.58631,   3.39268,   5.58163,   2.33653,   5.42355,   4.50893, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   1.00000],
        [  3.00000,   0.00000,  10.23637,   4.39125,   5.46470,   2.51846,  12.66143,   3.13422,  12.96050,   4.69712,   7.85072,   5.64801,   7.51126,   4.27156, -20.00000, -20.00000,   1.00000,   1.00000],
        [  5.00000,   0.00000,  14.84033,  17.26281,  10.31934,   2.90776,   9.90197,  15.83752,   9.69612,  18.65723, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   1.00000],
        [  6.00000,   2.00000,  10.63403,   9.11789,   4.45208,   2.46954,   8.57043,   7.90401,   8.41394,   9.63754,  12.58486,  10.33232,  12.85394,   8.54699, -20.00000, -20.00000,   1.00000,   1.00000],
        [  1.00000,   1.00000,   2.79316,   2.81367,   5.58631,   3.39268,   5.58163,   2.33653,   5.42355,   4.50893, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   2.00000],
        [  3.00000,   0.00000,  10.23637,   4.39125,   5.46470,   2.51846,  12.66143,   3.13422,  12.96050,   4.69712,   7.85072,   5.64801,   7.51126,   4.27156, -20.00000, -20.00000,   1.00000,   0.00000],
        [ 11.00000,   3.00000,   2.36222,  13.51719,   1.76856,   1.73731,   3.24117,  13.08641,   3.01549,  14.38522,   1.48244,  13.74583,   1.68007,  12.64908, -20.00000, -20.00000,   0.00000,   0.00000],
        [  3.00000,   0.00000,  10.23637,   4.39125,   5.46470,   2.51846,  12.66143,   3.13422,  12.96050,   4.69712,   7.85072,   5.64801,   7.51126,   4.27156, -20.00000, -20.00000,   1.00000,   1.00000],
        [  3.00000,   0.00000,  10.23637,   4.39125,   5.46470,   2.51846,  12.66143,   3.13422,  12.96050,   4.69712,   7.85072,   5.64801,   7.51126,   4.27156, -20.00000, -20.00000,   1.00000,   0.00000],
        [  5.00000,   0.00000,  14.84033,  17.26281,  10.31934,   2.90776,   9.90197,  15.83752,   9.69612,  18.65723, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   0.00000],
        [  6.00000,   2.00000,  10.63403,   9.11789,   4.45208,   2.46954,   8.57043,   7.90401,   8.41394,   9.63754,  12.58486,  10.33232,  12.85394,   8.54699, -20.00000, -20.00000,   1.00000,   0.00000],
        [  3.00000,   0.00000,  10.23637,   4.39125,   5.46470,   2.51846,  12.66143,   3.13422,  12.96050,   4.69712,   7.85072,   5.64801,   7.51126,   4.27156, -20.00000, -20.00000,   1.00000,   1.00000],
        [  5.00000,   0.00000,  14.84033,  17.26281,  10.31934,   2.90776,   9.90197,  15.83752,   9.69612,  18.65723, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   1.00000],
        [  6.00000,   2.00000,  10.63403,   9.11789,   4.45208,   2.46954,   8.57043,   7.90401,   8.41394,   9.63754,  12.58486,  10.33232,  12.85394,   8.54699, -20.00000, -20.00000,   1.00000,   1.00000],
        [  1.00000,   1.00000,   2.79316,   2.81367,   5.58631,   3.39268,   5.58163,   2.33653,   5.42355,   4.50893, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   0.00000],
        [  5.00000,   0.00000,  14.84033,  17.26281,  10.31934,   2.90776,   9.90197,  15.83752,   9.69612,  18.65723, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   0.00000],
        [  6.00000,   2.00000,  10.63403,   9.11789,   4.45208,   2.46954,   8.57043,   7.90401,   8.41394,   9.63754,  12.58486,  10.33232,  12.85394,   8.54699, -20.00000, -20.00000,   1.00000,   0.00000],
        [  1.00000,   1.00000,   2.79316,   2.81367,   5.58631,   3.39268,   5.58163,   2.33653,   5.42355,   4.50893, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   1.00000],
        [  5.00000,   0.00000,  14.84033,  17.26281,  10.31934,   2.90776,   9.90197,  15.83752,   9.69612,  18.65723, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   1.00000],
        [  6.00000,   2.00000,  10.63403,   9.11789,   4.45208,   2.46954,   8.57043,   7.90401,   8.41394,   9.63754,  12.58486,  10.33232,  12.85394,   8.54699, -20.00000, -20.00000,   1.00000,   1.00000],
        [  1.00000,   1.00000,   2.79316,   2.81367,   5.58631,   3.39268,   5.58163,   2.33653,   5.42355,   4.50893, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   2.00000],
        [  1.00000,   1.00000,   2.79316,   2.81367,   5.58631,   3.39268,   5.58163,   2.33653,   5.42355,   4.50893, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   0.00000],
        [ 11.00000,   3.00000,   2.36222,  13.51719,   1.76856,   1.73731,   3.24117,  13.08641,   3.01549,  14.38522,   1.48244,  13.74583,   1.68007,  12.64908, -20.00000, -20.00000,   0.00000,   0.00000],
        [  1.00000,   1.00000,   2.79316,   2.81367,   5.58631,   3.39268,   5.58163,   2.33653,   5.42355,   4.50893, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   1.00000],
        [  1.00000,   1.00000,   2.79316,   2.81367,   5.58631,   3.39268,   5.58163,   2.33653,   5.42355,   4.50893, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000, -20.00000,   1.00000,   2.00000]], device='cuda:0')
tensor([0.13328, 0.02339, 0.06558, 0.12466, 0.25937, 0.60628], device='cuda:0')
edit: torch.Size([80, 17])
targets!!: 80
t1!!!!!: tensor([[  0.00000,   1.00000,  59.59395,  ..., -80.00000,   1.00000,   0.00000],
        [  1.00000,   1.00000,  18.39166,  ..., -80.00000,   0.00000,   0.00000],
        [  1.00000,   2.00000,  14.27539,  ..., -80.00000,   0.00000,   0.00000],
        ...,
        [ 15.00000,   2.00000,  20.18265,  ..., -80.00000,   0.00000,   2.00000],
        [ 15.00000,   2.00000,  26.63394,  ..., -80.00000,   0.00000,   2.00000],
        [ 15.00000,   4.00000,  30.45734,  ..., -80.00000,   0.00000,   2.00000]], device='cuda:0')
Scanning '/home/cx/rmvision/datasets/final/train/labels.cache' for images and labels... 180 found, 0 missing, 0 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 180/180 [00:00<?, ?it/s]
Scanning '/home/cx/rmvision/datasets/final/val/labels.cache' for images and labels... 20 found, 0 missing, 0 empty, 0 corrupted: 100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 20/20 [00:00<?, ?it/s]
Images sizes do not match. This will causes images to be display incorrectly in the UI.
Image sizes 640 train, 640 test
Using 4 dataloader workers
Logging results to runs/train/exp29
Starting training for 250 epochs...
     Epoch   gpu_mem       box       obj       cls       col  landmark     total   targets  img_size
     0/249     2.42G    0.1333   0.02339   0.06558    0.1247    0.2594    0.6063        56       640:   8%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Ž                                                                                                                            | 1/12 [00:01<00:19,  1.81s/it]/opt/conda/conda-bld/pytorch_1634272068694/work/aten/src/ATen/native/cuda/IndexKernel.cu:93: operator(): block: [0,0,0], thread: [64,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1634272068694/work/aten/src/ATen/native/cuda/IndexKernel.cu:93: operator(): block: [0,0,0], thread: [65,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1634272068694/work/aten/src/ATen/native/cuda/IndexKernel.cu:93: operator(): block: [0,0,0], thread: [4,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1634272068694/work/aten/src/ATen/native/cuda/IndexKernel.cu:93: operator(): block: [0,0,0], thread: [5,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1634272068694/work/aten/src/ATen/native/cuda/IndexKernel.cu:93: operator(): block: [0,0,0], thread: [40,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1634272068694/work/aten/src/ATen/native/cuda/IndexKernel.cu:93: operator(): block: [0,0,0], thread: [41,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1634272068694/work/aten/src/ATen/native/cuda/IndexKernel.cu:93: operator(): block: [0,0,0], thread: [110,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1634272068694/work/aten/src/ATen/native/cuda/IndexKernel.cu:93: operator(): block: [0,0,0], thread: [111,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1634272068694/work/aten/src/ATen/native/cuda/IndexKernel.cu:93: operator(): block: [1,0,0], thread: [22,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && "index out of bounds"` failed.
/opt/conda/conda-bld/pytorch_1634272068694/work/aten/src/ATen/native/cuda/IndexKernel.cu:93: operator(): block: [1,0,0], thread: [23,0,0] Assertion `index >= -sizes[i] && index < sizes[i] && "index out of bounds"` failed.
     0/249     2.42G    0.1333   0.02339   0.06558    0.1247    0.2594    0.6063        56       640:   8%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–Ž                                                                                                                            | 1/12 [00:01<00:20,  1.87s/it]
Traceback (most recent call last):
  File "train.py", line 513, in <module>
    train(hyp, opt, device, tb_writer, wandb)
  File "train.py", line 290, in train
    loss, loss_items = compute_loss(pred, targets.to(device), model)  # loss scaled by batch_size
  File "/home/cx/rmvision/yolov5-face/utils/loss.py", line 119, in compute_loss
    tcls, tbox, indices, anchors, tlandmarks, lmks_mask, tcol = build_targets(p, targets, model)  # targets
  File "/home/cx/rmvision/yolov5-face/utils/loss.py", line 275, in build_targets
    lks[:, [0, 1]] = (lks[:, [0, 1]] - gij)
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call,so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1.
THCudaCheck FAIL file=/opt/conda/conda-bld/pytorch_1634272068694/work/aten/src/THC/THCCachingHostAllocator.cpp line=280 error=710 : device-side assert triggered